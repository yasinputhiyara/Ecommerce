<%- include("../../partials/adminheader") %>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <!-- Include Cropper.js CSS and JS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">


    <div class="container-scroller">
        <%- include("../../partials/adminSidebar") %>

            <div class="container-fluid page-body-wrapper">
                <%- include("../../partials/adminNav") %>

                    <div class="main-panel">
                        <div class="content-wrapper">

                            <div class="max-w-3xl mx-auto my-5 p-6 bg-white rounded-lg shadow">
                                <h1 class="text-2xl font-bold text-center text-gray-800 mb-6">Add New Product</h1>

                                <form id="productForm" class="space-y-4" onsubmit="return validateForm()">
                                    <!-- Basic Information -->
                                    <div>
                                        <span id="productNameError" class="text-red-500 text-sm"></span>
                                        <label for="productName" class="block font-semibold text-gray-700 mb-1">Product
                                            Name</label>
                                        <input type="text" id="productName" name="productName"
                                            placeholder="Enter product name"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                    </div>

                                    <div>
                                        <span id="brandError" class="text-red-500 text-sm"></span>
                                        <label for="brand" class="block font-semibold text-gray-700 mb-1">Brand</label>
                                        <select id="brand" name="brand"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                            <option value="" disabled selected>Select a Brand</option>
                                            <% for (let i=0; i < brand.length; i++) { %>
                                                <option value="<%= brand[i].brandName %>">
                                                    <%= brand[i].brandName %>
                                                </option>
                                                <% } %>
                                        </select>
                                    </div>

                                    <!-- Description -->
                                    <div>
                                        <span id="descriptionError" class="text-red-500 text-sm"></span>
                                        <label for="description"
                                            class="block font-semibold text-gray-700 mb-1">Description</label>
                                        <textarea id="description" name="description" rows="4"
                                            placeholder="Enter a detailed description (min 10 characters)"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
                                    </div>

                                    <!-- Pricing -->
                                    <div class="grid grid-cols-2 gap-4">
                                        <div>
                                            <span id="regularPriceError" class="text-red-500 text-sm"></span>
                                            <label for="regularPrice"
                                                class="block font-semibold text-gray-700 mb-1">Regular Price</label>
                                            <input type="number" id="regularPrice" name="regularPrice"
                                                placeholder="Enter regular price"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        </div>
                                        <div>
                                            <span id="salePriceError" class="text-red-500 text-sm"></span>
                                            <label for="salePrice" class="block font-semibold text-gray-700 mb-1">Sale
                                                Price</label>
                                            <input type="number" id="salePrice" name="salePrice"
                                                placeholder="Enter sale price"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        </div>
                                    </div>

                                    <!-- Variants -->
                                    <div>
                                        <label class="block font-semibold text-gray-700 mb-1">Size Variants</label>
                                        <div id="variantsContainer" class="space-y-2">
                                            <div class="variant grid grid-cols-3 gap-2">
                                                <select name="size"
                                                    class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                                    <option value="6">Size 6</option>
                                                    <option value="7">Size 7</option>
                                                    <option value="8">Size 8</option>
                                                    <option value="9">Size 9</option>
                                                    <option value="10">Size 10</option>
                                                </select>
                                                <input type="number" name="quantity" placeholder="Quantity"
                                                    class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                                <button type="button"
                                                    class="removeVariant px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">Remove</button>
                                            </div>
                                        </div>
                                        <button type="button" id="addVariant"
                                            class="mt-2 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">Add
                                            Variant</button>
                                    </div>

                                    <!-- Categories -->
                                    <div class="grid grid-cols-2 gap-4">
                                        <div>
                                            <span id="categoryError" class="text-red-500 text-sm"></span>
                                            <label for="category"
                                                class="block font-semibold text-gray-700 mb-1">Category</label>
                                            <select id="category" name="category"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                                <option value="" disabled selected>Select Category</option>
                                                <% for (let i=0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i].name %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>
                                        </div>
                                        <div>
                                            <label for="subCategory" class="block font-semibold text-gray-700 mb-1">Sub
                                                Category</label>
                                            <select id="subCategory" name="subCategory"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                                <option value="" disabled selected>Select Sub Category</option>
                                                <option value="formal">Formal</option>
                                                <option value="casual">Casual</option>
                                                <option value="sports">Sports</option>
                                            </select>
                                        </div>
                                    </div>

                                    <!-- Color -->
                                    <div>
                                        <span id="colorError" class="text-red-500 text-sm"></span>
                                        <label for="color" class="block font-semibold text-gray-700 mb-1">Color</label>
                                        <input type="text" id="color" name="color" placeholder="Enter product color"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                    </div>

                                    <!-- Image Inputs -->
                                    <div>
                                        <span id="imagesError" class="text-red-500 text-sm"></span>
                                        <label class="block font-semibold text-gray-700 mb-1">Product Images (Exactly 4
                                            required)</label>
                                        <input type="file" id="images1" accept="image/*"
                                            class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        <input type="file" id="images2" accept="image/*"
                                            class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        <input type="file" id="images3" accept="image/*"
                                            class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        <input type="file" id="images4" accept="image/*"
                                            class="image-input w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                    </div>

                                    <div id="imagePreview" class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4"></div>
                                    <span id="imagesError" class="text-red-500 text-sm"></span>

                                    <!-- Submit -->
                                    <button type="submit"
                                        class="w-full px-6 py-3 bg-blue-500 text-white font-semibold rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">Add
                                        Product</button>
                                </form>




                                <div id="cropperModal"
                                    class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
                                    <div class="bg-white p-4 rounded-lg">
                                        <div class="modal-body">
                                            <img id="imageToCrop" class="max-w-full" alt="Image for cropping">
                                        </div>
                                        <div class="modal-footer mt-4 flex justify-end">
                                            <button id="cropButton"
                                                class="bg-blue-500 text-white px-4 py-2 rounded-md mr-2">Crop</button>
                                            <button id="cancelCropButton"
                                                class="bg-gray-500 text-white px-4 py-2 rounded-md">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


            </div>
    </div>


    <script>
        // Utility Functions
function isPositiveNumber(value) {
    const number = parseFloat(value);
    return !isNaN(number) && number > 0;
}

function isPositiveInteger(value) {
    const number = parseInt(value, 10);
    return !isNaN(number) && number > 0 && Number.isInteger(number);
}

// Form Validation
function validateForm() {
    let isValid = true;

    // Clear previous error messages
    document.querySelectorAll(".text-red-500").forEach((element) => {
        element.textContent = "";
    });

    // Get form field values
    const productName = document.getElementById("productName").value.trim();
    const brand = document.getElementById("brand").value.trim();
    const description = document.getElementById("description").value.trim();
    const regularPrice = document.getElementById("regularPrice").value.trim();
    const salePrice = document.getElementById("salePrice").value.trim();
    const category = document.getElementById("category").value.trim();
    const color = document.getElementById("color").value.trim();

    // Validate Product Name
    if (!productName) {
        document.getElementById("productNameError").textContent = "Product name cannot be empty.";
        isValid = false;
    }

    // Validate Brand
    if (!brand) {
        document.getElementById("brandError").textContent = "Please select a brand.";
        isValid = false;
    }

    // Validate Description
    if (description.length < 10) {
        document.getElementById("descriptionError").textContent = "Description must be at least 10 characters long.";
        isValid = false;
    }

    // Validate Regular Price
    if (!isPositiveNumber(regularPrice)) {
        document.getElementById("regularPriceError").textContent = "Regular price must be a valid positive number.";
        isValid = false;
    }

    // Validate Sale Price
    if (!isPositiveNumber(salePrice)) {
        document.getElementById("salePriceError").textContent = "Sale price must be a valid positive number.";
        isValid = false;
    } else if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
        document.getElementById("salePriceError").textContent = "Sale price must be less than regular price.";
        isValid = false;
    }

    // Validate Category
    if (!category) {
        document.getElementById("categoryError").textContent = "Please select a category.";
        isValid = false;
    }

    // Validate Color
    if (!color) {
        document.getElementById("colorError").textContent = "Color cannot be empty.";
        isValid = false;
    }

    // Validate Images
    if (croppedImages.size !== 4) {
        document.getElementById("imagesError").textContent = "Exactly 4 cropped images are required.";
        isValid = false;
    }

    // Validate Variants
    const variants = document.querySelectorAll("#variantsContainer .variant");
    if (variants.length === 0) {
        isValid = false;
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "At least one size variant is required."
        });
    }

    let hasInvalidVariant = false;
    variants.forEach(variant => {
        const quantity = variant.querySelector('input[name="quantity"]').value.trim();
        if (!isPositiveInteger(quantity)) {
            hasInvalidVariant = true;
        }
    });

    if (hasInvalidVariant) {
        isValid = false;
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "All variant quantities must be positive whole numbers."
        });
    }

    return isValid;
}

// Image Handling Setup
const imageInputs = document.querySelectorAll('.image-input');
const imagePreviewContainer = document.getElementById('imagePreview');
const cropperModal = document.getElementById('cropperModal');
const imageToCrop = document.getElementById('imageToCrop');
const cropButton = document.getElementById('cropButton');
const cancelCropButton = document.getElementById('cancelCropButton');
let cropper;
let currentInput;
let croppedImages = new Map();

// Image Input Handlers
imageInputs.forEach((input, index) => {
    input.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            // Validate file type
            if (!file.type.startsWith('image/')) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Please upload only image files."
                });
                input.value = '';
                return;
            }

            // Validate file size (max 5MB)
            if (file.size > 5 * 1024 * 1024) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Image size should not exceed 5MB."
                });
                input.value = '';
                return;
            }

            currentInput = input;
            const reader = new FileReader();
            reader.onload = function(e) {
                imageToCrop.src = e.target.result;
                cropperModal.classList.remove('hidden');
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(imageToCrop, {
                    aspectRatio: 1,
                    viewMode: 2,
                    background: true,
                    zoomable: true,
                    cropBoxResizable: false
                });
            };
            reader.readAsDataURL(file);
        }
    });
});

// Crop Button Handler
cropButton.addEventListener('click', function() {
    const canvas = cropper.getCroppedCanvas({
        width: 440,
        height: 440
    });
    
    canvas.toBlob(async (blob) => {
        // Store cropped image
        croppedImages.set(currentInput.id, {
            blob: blob,
            preview: canvas.toDataURL()
        });

        // Update preview
        const previewId = `preview_${currentInput.id}`;
        let previewWrapper = document.getElementById(previewId);
        
        if (!previewWrapper) {
            previewWrapper = document.createElement('div');
            previewWrapper.id = previewId;
            previewWrapper.className = 'relative';
            imagePreviewContainer.appendChild(previewWrapper);
        } else {
            previewWrapper.innerHTML = '';
        }

        const imageElement = document.createElement('img');
        imageElement.src = canvas.toDataURL();
        imageElement.className = 'w-full h-auto rounded-md';

        const deleteButton = document.createElement('button');
        deleteButton.textContent = '×';
        deleteButton.className = 'absolute top-2 right-2 bg-red-500 text-white w-6 h-6 rounded-full flex items-center justify-center hover:bg-red-600';
        deleteButton.addEventListener('click', () => {
            previewWrapper.remove();
            croppedImages.delete(currentInput.id);
            currentInput.value = '';
        });

        previewWrapper.appendChild(imageElement);
        previewWrapper.appendChild(deleteButton);

        // Close modal and cleanup
        cropper.destroy();
        cropperModal.classList.add('hidden');
    }, 'image/jpeg', 0.9);
});

// Cancel Crop Button Handler
cancelCropButton.addEventListener('click', function() {
    currentInput.value = '';
    cropper.destroy();
    cropperModal.classList.add('hidden');
});

// Add Variant Button Handler
document.getElementById("addVariant").addEventListener("click", function() {
    const container = document.getElementById("variantsContainer");
    const variant = document.createElement("div");
    variant.className = "variant grid grid-cols-3 gap-2 mb-2";
    
    variant.innerHTML = `
        <select name="size" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option value="6">Size 6</option>
            <option value="7">Size 7</option>
            <option value="8">Size 8</option>
            <option value="9">Size 9</option>
            <option value="10">Size 10</option>
        </select>
        <input type="number" name="quantity" placeholder="Quantity" min="1" 
            class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        <button type="button" 
            class="removeVariant px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">Remove</button>
    `;
    
    container.appendChild(variant);
    
    variant.querySelector(".removeVariant").addEventListener("click", function() {
        variant.remove();
    });
});

// Form Submit Handler
document.getElementById("productForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    if (!validateForm()) {
        return;
    }

    const formData = new FormData();
    
    // Add basic form fields
    formData.append("productName", document.getElementById("productName").value.trim());
    formData.append("regularPrice", document.getElementById("regularPrice").value.trim());
    formData.append("salePrice", document.getElementById("salePrice").value.trim());
    formData.append("brand", document.getElementById("brand").value.trim());
    formData.append("category", document.getElementById("category").value.trim());
    formData.append("subCategory", document.getElementById("subCategory").value.trim());
    formData.append("description", document.getElementById("description").value.trim());
    formData.append("color", document.getElementById("color").value.trim());

    // Add cropped images
    for (const [inputId, imageData] of croppedImages) {
        formData.append("images", imageData.blob, `${inputId}.jpg`);
    }

    // Add variants
    const variants = [];
    document.querySelectorAll("#variantsContainer .variant").forEach(variant => {
        const size = variant.querySelector('select[name="size"]').value;
        const quantity = variant.querySelector('input[name="quantity"]').value.trim();
        if (size && quantity) {
            variants.push({ size, quantity: parseInt(quantity) });
        }
    });
    formData.append("variants", JSON.stringify(variants));

    try {
        const response = await fetch("/admin/add-product", {
            method: "POST",
            body: formData
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: "success",
                title: "Success",
                text: data.message,
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                // Reset form and clear previews
                document.getElementById("productForm").reset();
                document.getElementById('imagePreview').innerHTML = '';
                croppedImages.clear();
                
                // Reset variants to initial state
                const variantsContainer = document.getElementById("variantsContainer");
                variantsContainer.innerHTML = `
                    <div class="variant grid grid-cols-3 gap-2">
                        <select name="size" class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <option value="6">Size 6</option>
                            <option value="7">Size 7</option>
                            <option value="8">Size 8</option>
                            <option value="9">Size 9</option>
                            <option value="10">Size 10</option>
                        </select>
                        <input type="number" name="quantity" placeholder="Quantity" 
                            class="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <button type="button" 
                            class="removeVariant px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">Remove</button>
                    </div>
                `;
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: data.message || "Failed to add product."
            });
        }
    } catch (error) {
        console.error("Error:", error);
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "Server error: " + (error.message || "An unexpected error occurred while adding the product.")
        });
    }
});

// Initialize tooltips if you're using them
document.addEventListener('DOMContentLoaded', function() {
    // Add any initialization code here
    
    // Add event listener for initial remove variant button
    document.querySelector(".removeVariant").addEventListener("click", function() {
        if (document.querySelectorAll(".variant").length > 1) {
            this.closest(".variant").remove();
        } else {
            Swal.fire({
                icon: "warning",
                title: "Warning",
                text: "At least one variant is required."
            });
        }
    });
});
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>


    <%- include("../../partials/adminfooter") %>