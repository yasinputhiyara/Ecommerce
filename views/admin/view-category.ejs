<%- include("../partials/adminheader") %>

    <style>
        /* General Styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
        }

        .container-scroller {
            padding: 20px;
        }

        .form-label {
            font-weight: bold;
            color: #495057;
        }

        .form-control {
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #ced4da;
            font-size: 14px;
        }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-size: 14px;
            font-weight: bold;
            text-transform: uppercase;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .card {
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            background-color: #ffffff;
            overflow: hidden;
        }

        .card-header {
            background-color: #007bff;
            color: #ffffff;
            padding: 15px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            text-transform: uppercase;
        }

        .card-body {
            padding: 20px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        .table th,
        .table td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #e9ecef;
        }

        .table th {
            background-color: #f1f1f1;
            font-weight: bold;
        }

        .badge {
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: bold;
            text-transform: uppercase;
        }

        .badge-success {
            background-color: #28a745;
            color: #ffffff;
        }

        .badge-danger {
            background-color: #dc3545;
            color: #ffffff;
        }

        /* Table Actions */
        .btn-action {
            border-radius: 8px;
            padding: 5px 10px;
            font-size: 12px;
            cursor: pointer;
            text-transform: uppercase;
        }

        .btn-info {
            background-color: #17a2b8;
            color: #ffffff;
            border: none;
            transition: background-color 0.3s ease;
        }

        .btn-info:hover {
            background-color: #117a8b;
        }

        .btn-danger {
            background-color: #dc3545;
            color: #ffffff;
            border: none;
            transition: background-color 0.3s ease;
        }

        .btn-danger:hover {
            background-color: #bd2130;
        }

        .btn-success {
            background-color: #28a745;
            color: #ffffff;
            border: none;
            transition: background-color 0.3s ease;
        }

        .btn-success:hover {
            background-color: #218838;
        }

        /* Pagination */
        .pagination-container {
            margin: 20px 0;
            text-align: center;
        }

        .pagination a {
            display: inline-block;
            margin: 0 5px;
            padding: 8px 12px;
            background-color: #007bff;
            color: #ffffff;
            border-radius: 5px;
            text-decoration: none;
        }

        .pagination a:hover {
            background-color: #0056b3;
        }

        .pagination .current-page {
            display: inline-block;
            margin: 0 5px;
            padding: 8px 12px;
            background-color: #6c757d;
            color: #ffffff;
            border-radius: 5px;
        }

        .error-message {
            color: red;
        }
    </style>


    <div class="container-scroller">
        <%- include("../partials/adminSidebar") %>

            <div class="container-fluid page-body-wrapper">
                <%- include("../partials/adminNav") %>

                    <div class="main-panel">
                        <div class="content-wrapper bg-light">


                            <section class="content-main">
                                <div class="content-header">
                                    <div>
                                        <h2 class="content-title card-title">Category</h2>
                                    </div>
                                </div>
                                <header class="card-header text-center mb-20">
                                    <!-- <form action="/admin/view-category" method="get" class="d-inline">
                                        <div class="input-group input-group-sm border border-1 border-grey rounded-pill"
                                            style="width: 500px; margin-left: 230px">
                                            <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search" value="" />

                                            <button class="btn" type="submit">Search</button>
                                        </div>
                                    </form> -->
                                </header>
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <form method="post" action="/admin/add-category"
                                                    onsubmit="handleFormSubmit(event)">
                                                    <div class="mb-4">
                                                        <label for="product_name" class="form-label">Name</label>
                                                        <input type="text" name="name" placeholder="Type here"
                                                            class="form-control" id="product_name" />
                                                        <div id="name-error" class="error-message"></div>
                                                    </div>
                                                    <div class="mb-4">
                                                        <label class="form-label">Description</label>
                                                        <textarea placeholder="Type here" name="description"
                                                            class="form-control" id="descriptionId"></textarea>
                                                        <div id="description-error" class="error-message"></div>
                                                    </div>
                                                    <div class="d-grid">
                                                        <button class="btn btn-primary" type="submit">Create
                                                            category</button>
                                                    </div>
                                                </form>

                                            </div>
                                            <div class="col-md-8 ml-10">
                                                <div class="table-responsive">
                                                    <table class="table table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th class="text-center"></th>
                                                                <th>Name</th>
                                                                <th>Description</th>
                                                                <th>Offer Price</th>
                                                                <th>Offer</th>
                                                                <th>Status</th>
                                                                <th>List/Unlist</th>
                                                                <th class="text-start">Edit</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% cat.reverse().forEach((category , index)=>{ %>

                                                                <tr>
                                                                    <td></td>
                                                                    <td class="text-start">
                                                                        <%= category.name %>
                                                                    </td>
                                                                    <td class="text-start">
                                                                        <%= category.description %>
                                                                    </td>
                                                                    <td>
                                                                        <% if(category.categoryOffer){ %>
                                                                            <%= category.categoryOffer %>%
                                                                                <% }else{ %>
                                                                                    0%
                                                                                    <% } %>
                                                                    </td>
                                                                    <td class="text-start">
                                                                        <% if(category.categoryOffer===0) {%>

                                                                            <button class="btn btn-info"
                                                                                style="width: 100px">
                                                                                <a href="#" class="text-white"
                                                                                    onclick="addOffer('<%= category._id%>')">Add
                                                                                    Offer</a>
                                                                            </button>

                                                                            <% }else{ %>

                                                                                <button class="btn btn-info"
                                                                                    style="width: 100px">
                                                                                    <a href="#" class="text-white"
                                                                                        onclick="removeOffer('<%= category._id%>')">Remove</a>
                                                                                </button>

                                                                                <% } %>
                                                                    </td>
                                                                    <td class="text-start">

                                                                        <% if(category.isListed){ %>
                                                                            <span class="badge rounded-pill bg-success "
                                                                                style="width: 60px">Listed</span>
                                                                            <% }else { %>

                                                                                <span
                                                                                    class="badge rounded-pill bg-danger"
                                                                                    style="width: 60px">Unlisted</span>
                                                                                <% } %>
                                                                    </td>
                                                                    <td class="text-start">
                                                                        <% if (!category.isListed) { %>
                                                                            <button class="btn btn-success"
                                                                                style="width: 90px"
                                                                                onclick="confirmAction('<%= category._id %>', 'list')">
                                                                                List
                                                                            </button>
                                                                            <% } else { %>
                                                                                <button class="btn btn-danger"
                                                                                    style="width: 90px"
                                                                                    onclick="confirmAction('<%= category._id %>', 'unlist')">
                                                                                    Unlist
                                                                                </button>
                                                                                <% } %>
                                                                    </td>
                                                                    <td class="text-start">
                                                                        <button class="btn btn-info text-white"
                                                                            onclick="openEditModal('<%= category._id %>', '<%= category.name %>', '<%= category.description %>')">
                                                                            Edit
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                                <% }) %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Edit Category Modal -->
                                <div class="modal fade" id="editCategoryModal" tabindex="-1"
                                    aria-labelledby="editCategoryModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <form onsubmit="submitEditForm(event)">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="editCategoryModalLabel">Edit Category
                                                    </h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                        aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <input type="hidden" id="editCategoryId">
                                                    <div class="mb-3">
                                                        <label for="editCategoryName" class="form-label">Category
                                                            Name</label>
                                                        <input type="text" id="editCategoryName" class="form-control">
                                                        <div id="edit-name-error" class="text-danger"></div>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label for="editCategoryDescription"
                                                            class="form-label">Description</label>
                                                        <textarea id="editCategoryDescription"
                                                            class="form-control"></textarea>
                                                        <div id="edit-description-error" class="text-danger"></div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary"
                                                        data-bs-dismiss="modal">Close</button>
                                                    <button type="submit" class="btn btn-primary">Save changes</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>



                                <!-- <div class="pagination-container">
                                    <a href="#">&laquo; Previous</a>
                                    <span class="current-page"></span>
                                    <a href="#"></a>
                                    <a href="#">Next &raquo;</a>
                                </div> -->
                            </section>




                        </div>

                    </div>


            </div>
    </div>

    </section>


    <script>
        function handleFormSubmit(event) {
            event.preventDefault(); // Prevent form submission

            if (!validateForm()) return; // Form validation

            const name = document.querySelector('[name="name"]').value.trim();
            const description = document.querySelector('[name="description"]').value.trim();

            fetch('/admin/add-category', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, description })
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Parse JSON only if response is OK
                    } else {
                        return response.json().then(errorData => {
                            throw new Error(errorData.error || 'An unknown error occurred.');
                        });
                    }
                })
                .then(data => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message || 'Category added successfully!',
                    }).then(() => {
                        location.reload(); // Reload after success
                    });
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: error.message || 'Something went wrong!',
                    });
                });
        }


        function validateForm() {
            clearErrorMessage();

            let isValid = true;
            const name = document.querySelector('[name="name"]').value.trim();
            const description = document.querySelector('[name="description"]').value.trim();

            if (!name) {
                displayErrorMessage('name-error', 'Please enter a name');
                isValid = false;
            } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                displayErrorMessage('name-error', 'Category name should contain only alphabetic characters');
                isValid = false;
            }

            if (!description) {
                displayErrorMessage('description-error', 'Please enter a description');
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = 'block';
        }

        function clearErrorMessage() {
            document.querySelectorAll('.error-message').forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
        }


        async function addOffer(categoryId) {
            const { value: amount } = await Swal.fire({
                title: "Offer in percentage",
                input: "number",
                inputLabel: "Percentage",
                inputPlaceholder: "%",
                inputAttributes: { min: "1", max: "100" } // Restrict input between 1 and 100
            });

            if (amount) {
                const percentage = parseFloat(amount);

                // Validate that the percentage is within the allowed range (1 - 100)
                if (isNaN(percentage) || percentage <= 0 || percentage > 100) {
                    return Swal.fire("Invalid Offer", "Please enter a valid percentage (1-100).", "error");
                }

                try {
                    const response = await fetch('/admin/addCategoryOffer', {
                        method: "POST",
                        headers: { "content-type": "application/json" },
                        body: JSON.stringify({
                            percentage: percentage,
                            categoryId: categoryId,
                        })
                    });

                    const data = await response.json();
                    if (response.ok && data.status === true) {
                        Swal.fire(
                            "Offer added",
                            "The Offer has been added",
                            "success"
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire("Failed", data.message || "Adding offer failed", "error");
                    }
                } catch (error) {
                    Swal.fire("Error", "An error occurred while adding the offer", "error");
                }
            }
        }



        async function removeOffer(categoryId) {
            try {
                const response = await fetch('/admin/removeCategoryOffer', {
                    method: "POST",
                    headers: { "content-type": "application/json" },
                    body: JSON.stringify({
                        categoryId: categoryId,
                    })
                })

                const data = await response.json()

                if (response.ok && data.status === true) {
                    Swal.fire(
                        "Offer remved",
                        "The Offer has been removed",
                        "success"
                    ).then(() => {
                        location.reload()
                    })

                } else {
                    Swal.fire("failed", data.message || "Removing offer failed", "error")
                }
            } catch (error) {
                Swal.fire(
                    "Error",
                    "An error occured while removing the offfer",
                    "error"
                )

                console.log("Removing offer error", error);

            }

        } removeOffer

    </script>


    <script>
        // Function to open the modal and populate it with category data
        function openEditModal(id, name, description) {
            document.getElementById('editCategoryId').value = id;
            document.getElementById('editCategoryName').value = name;
            document.getElementById('editCategoryDescription').value = description;
            const editModal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
            editModal.show();
        }

        // Form submission for editing category
        function submitEditForm(event) {
            event.preventDefault();

            const id = document.getElementById('editCategoryId').value;
            const name = document.getElementById('editCategoryName').value.trim();
            const description = document.getElementById('editCategoryDescription').value.trim();

            // Validation
            let isValid = true;

            // Name Validation: Only allow letters, spaces, and dots
            const namePattern = /^[a-zA-Z]+$/;
            if (!name) {
                document.getElementById('edit-name-error').textContent = "Please enter a name.";
                isValid = false;
            } else if (!namePattern.test(name)) {
                document.getElementById('edit-name-error').textContent =
                    "Name must only contain letters"
                isValid = false;
            } else {
                document.getElementById('edit-name-error').textContent = "";
            }

            // Description Validation
            if (!description) {
                document.getElementById('edit-description-error').textContent =
                    "Please enter a description.";
                isValid = false;
            } else {
                document.getElementById('edit-description-error').textContent = "";
            }

            if (!isValid) return;

            // Send data to the server
            fetch(`/admin/edit-category/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, description })
            })
                .then((response) => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        return response.json().then((errorData) => {
                            throw new Error(errorData.error || 'An unknown error occurred.');
                        });
                    }
                })
                .then((data) => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message || 'Category updated successfully!',
                    }).then(() => {
                        location.reload(); // Reload after success
                    });
                })
                .catch((error) => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: error.message || 'Something went wrong!',
                    });
                });
        }


        function confirmAction(categoryId, action) {
            const actionText = action === 'list' ? 'List' : 'Unlist';
            const actionUrl = `/admin/${action}Category?id=${categoryId}`;

            Swal.fire({
                title: `Are you sure you want to ${actionText.toLowerCase()} this brand?`,
                text: `This action will ${actionText.toLowerCase()} the brand.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: action === 'list' ? '#28a745' : '#d33', // Green for List, Red for Unlist
                cancelButtonColor: '#6c757d',
                confirmButtonText: `Yes, ${actionText} it!`,
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    // Perform the action by redirecting to the appropriate URL
                    window.location.href = actionUrl;
                }
            });
        }

    </script>

    <%- include("../partials/adminfooter") %>