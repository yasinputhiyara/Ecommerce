<%- include("../partials/adminheader") %>

  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">



  <style>
    .thumbnails-container {
      display: flex;
      overflow-x: auto;
    }

    .thumbnail {
      margin-right: 10px;
    }

    .input-upload {
      position: relative;
    }

    .error-message {
      color: red;
      display: none;
    }

    input.form-control {
      color: #000;
      /* Set default text color */
      background-color: #fff;
      /* Set default background color */
    }

    input.form-control:focus {
      color: #000;
      /* Text color on focus */
      background-color: #fff;
      /* Background color on focus */
      border-color: #007bff;
      /* Optional: Change border color to indicate focus */
    }
  </style>

  <div class="container-scroller">
    <%- include("../partials/adminSidebar") %>

      <div class="container-fluid page-body-wrapper">
        <%- include("../partials/adminNav") %>

          <div class="main-panel">
            <div class="content-wrapper">
              <section class="content-main">
                <div class="row">
                  <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                  </div>
                  <div class="col-lg-12">
                    <div class="card mb-4">
                      <div class="card-body">
                        <form method="post" action="/admin/add-product" enctype="multipart/form-data"
                          onsubmit="return validateForm()">
                          <!-- Product Details Section -->
                          <div class="row">
                            <div class="col-lg-12 mb-4">
                              <label for="product_name" class="form-label">Product
                                Name</label>
                              <input type="text" name="productName" class="form-control border" id="product_name" />
                              <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-12 mb-4">
                              <label class="form-label">Brand</label>
                              <select class="form-select border" name="brand">
                                <% for(let i=0 ; i < brand.length ; i++){ %>
                                  <option value="<%= brand[i].brandName %>">
                                    <%= brand[i].brandName %>
                                  </option>
                                  <% } %>
                              </select>
                              <div id="brand-error" class="error-message"></div>
                            </div>
                          </div>

                          <!-- Description Section -->
                          <div class="mb-4">
                            <label class="form-label">Full Description</label>
                            <input type="text" name="description" class="form-control border">
                            <!-- <textarea name="descriptionData" rows="4"
                                                            class="form-control border"></textarea> -->
                            <div id="description-error" class="error-message"></div>
                          </div>

                          <!-- Pricing and Quantity Section -->
                          <div class="row">
                            <div class="col-lg-4 mb-4">
                              <label class="form-label">Regular Price</label>
                              <input placeholder="$" name="regularPrice" type="text" class="form-control border" />
                              <div id="regularPrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                              <label class="form-label">Sale Price</label>
                              <input name="salePrice" type="text" class="form-control border" />
                              <div id="salePrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                              <label class="form-label">Quantity</label>
                              <input name="quantity" type="text" class="form-control border" />
                              <div id="quantity-error" class="error-message"></div>
                            </div>
                          </div>

                          <div class="row">
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Color</label>
                                <input name="color" type="text" class="form-control border">
                              </div>
                              <div id="color-error" class="error-message"></div>
                            </div>
                          </div>

                          <!-- Category and Sub Category Section -->
                          <div class="card mb-4">
                            <div class="card-body">
                              <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                  <label class="form-label">Category</label>
                                  <select class="form-select border" style="width: 150px;" name="category">



                                    <% for(let i=0 ; i<cat.length ;i++ ) {%>
                                      <option value="<%= cat[i].name %>">

                                        <%= cat[i].name %>

                                      </option>

                                      <% } %>


                                  </select>
                                  <div id="category-error" class="error-message">
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>

                          <div class="card mb-4">
                            <div class="card-body">
                              <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                  <label class="form-label">Sub Category</label>
                                  <select class="form-select border" style="width: 150px;" name="subCategory">
                                    
                                    <option value="formal"> Formal Shoes</option>
                                    <option value="sports"> Sports Shoes</option>
                                    <option value="casual"> Casual Shoes</option>
                                    <option value="sneakers"> Sneakers Shoes</option>
                                  </select>
                                  <!-- <div id="category-error" class="error-message"></div> -->
                                </div>
                              </div>
                            </div>
                          </div>

                          <!-- Image Upload Section -->
                          <!-- Product Images Section -->
                          <div class="card mb-4">
                            <div class="card-header">
                              <h4>Product Images</h4>
                            </div>
                            <div class="card-body">
                              <div class="row">
                                <!-- Input 1 -->
                                <div class="col-lg-3 col-md-4 mb-4">
                                  <label for="input1" class="form-label">Upload Image 1</label>
                                  <input 
                                    type="file" 
                                    class="form-control" 
                                    id="input1" 
                                    name="images" 
                                    accept="image/png, image/jpeg, image/jpg" 
                                    onchange="loadImageForCropping(event, 1)">
                                  <img 
                                    src="" 
                                    alt="Product Image 1" 
                                    id="imgView1" 
                                    class="img-preview mt-2" 
                                    style="width: 100%; max-height: 150px; object-fit: cover;">
                                </div>
                          
                                <!-- Input 2 -->
                                <div class="col-lg-3 col-md-4 mb-4">
                                  <label for="input2" class="form-label">Upload Image 2</label>
                                  <input 
                                    type="file" 
                                    class="form-control" 
                                    id="input2" 
                                    name="images" 
                                    accept="image/png, image/jpeg, image/jpg" 
                                    onchange="loadImageForCropping(event, 2)">
                                  <img 
                                    src="" 
                                    alt="Product Image 2" 
                                    id="imgView2" 
                                    class="img-preview mt-2" 
                                    style="width: 100%; max-height: 150px; object-fit: cover;">
                                </div>
                          
                                <!-- Input 3 -->
                                <div class="col-lg-3 col-md-4 mb-4">
                                  <label for="input3" class="form-label">Upload Image 3</label>
                                  <input 
                                    type="file" 
                                    class="form-control" 
                                    id="input3" 
                                    name="images" 
                                    accept="image/png, image/jpeg, image/jpg" 
                                    onchange="loadImageForCropping(event, 3)">
                                  <img 
                                    src="" 
                                    alt="Product Image 3" 
                                    id="imgView3" 
                                    class="img-preview mt-2" 
                                    style="width: 100%; max-height: 150px; object-fit: cover;">
                                </div>
                          
                                <!-- Input 4 -->
                                <div class="col-lg-3 col-md-4 mb-4">
                                  <label for="input4" class="form-label">Upload Image 4</label>
                                  <input 
                                    type="file" 
                                    class="form-control" 
                                    id="input4" 
                                    name="images" 
                                    accept="image/png, image/jpeg, image/jpg" 
                                    onchange="loadImageForCropping(event, 4)">
                                  <img 
                                    src="" 
                                    alt="Product Image 4" 
                                    id="imgView4" 
                                    class="img-preview mt-2" 
                                    style="width: 100%; max-height: 150px; object-fit: cover;">
                                </div>
                              </div>
                            </div>
                          </div>                          

                          <!-- Modal for Image Cropping -->
                          <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-lg">
                              <div class="modal-content">
                                <div class="modal-header">
                                  <h5 class="modal-title" id="cropModalLabel">Crop
                                    Image</h5>
                                  <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                  <div class="container">
                                    <img id="imageToCrop" src="" alt="Image to Crop">
                                  </div>
                                </div>
                                <div class="modal-footer">
                                  <button type="button" class="btn btn-secondary"
                                    data-bs-dismiss="modal">Cancel</button>
                                  <button type="button" class="btn btn-primary" id="cropImageBtn">Crop Image</button>
                                </div>
                              </div>
                            </div>
                          </div>


                          <!-- Submit Button -->
                          <div>
                            <button class="btn btn-primary text-center w-100 rounded font-sm hover-up" id="updatebtn"
                              type="submit">
                              Update
                            </button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            </div>
          </div>
      </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <script>
    function validateForm() {
      let isValid = true;

      // Clear previous error messages
      document.querySelectorAll(".error-message").forEach((element) => {
        element.style.display = "none";
        element.textContent = "";
      });

      // Get form field values
      const productName = document.getElementById("product_name").value.trim();
      const brand = document.querySelector("select[name='brand']").value.trim();
      const description = document.querySelector("textarea[name='descriptionData']").value.trim();
      const regularPrice = document.querySelector("input[name='regularPrice']").value.trim();
      const salePrice = document.querySelector("input[name='salePrice']").value.trim();
      const quantity = document.querySelector("input[name='quantity']").value.trim();

      // Validate Product Name
      if (productName === "") {
        const error = document.getElementById("productName-error");
        error.style.display = "block";
        error.textContent = "Product name cannot be empty.";
        isValid = false;
      }

      // Validate Brand Selection
      if (brand === "") {
        const error = document.getElementById("brand-error");
        error.style.display = "block";
        error.textContent = "Please select a brand.";
        isValid = false;
      }

      // Validate Description
      if (description.length < 10) {
        const error = document.getElementById("description-error");
        error.style.display = "block";
        error.textContent = "Description must be at least 10 characters long.";
        isValid = false;
      }

      // Validate Regular Price
      if (!isPositiveNumber(regularPrice)) {
        const error = document.getElementById("regularPrice-error");
        error.style.display = "block";
        error.textContent = "Regular price must be a valid positive number.";
        isValid = false;
      }

      // Validate Sale Price
      if (!isPositiveNumber(salePrice)) {
        const error = document.getElementById("salePrice-error");
        error.style.display = "block";
        error.textContent = "Sale price must be a valid positive number.";
        isValid = false;
      } else if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
        const error = document.getElementById("salePrice-error");
        error.style.display = "block";
        error.textContent = "Sale price must be less than the regular price.";
        isValid = false;
      }

      // Validate Quantity
      if (!isPositiveInteger(quantity)) {
        const error = document.getElementById("quantity-error");
        error.style.display = "block";
        error.textContent = "Quantity must be a valid positive integer.";
        isValid = false;
      }

      return isValid;
    }

    // Utility function: Check if a value is a positive number
    function isPositiveNumber(value) {
      const number = parseFloat(value);
      return !isNaN(number) && number > 0;
    }

    // Utility function: Check if a value is a positive integer
    function isPositiveInteger(value) {
      const number = parseInt(value, 10);
      return !isNaN(number) && number > 0 && Number.isInteger(number);
    }

    // Handle image previews for thumbnails
    document.querySelector("input[name='images']").addEventListener("change", function (event) {
      const container = document.querySelector(".thumbnails-container");
      container.innerHTML = ""; // Clear previous thumbnails
      Array.from(event.target.files).forEach((file) => {
        const reader = new FileReader();
        reader.onload = function (e) {
          const img = document.createElement("img");
          img.src = e.target.result;
          img.className = "thumbnail";
          img.style.width = "200px";
          img.style.height = "200px";
          container.appendChild(img);
        };
        reader.readAsDataURL(file);
      });
    });


  </script>

  <script>
    let cropper;
    let currentInputId;

    // Function to load the image for cropping
    function loadImageForCropping(event, i) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const imgElement = document.getElementById('imageToCrop');
          imgElement.src = e.target.result;

          // Show modal for cropping
          const cropModal = new bootstrap.Modal(document.getElementById('cropModal'));
          cropModal.show();

          currentInputId = i;

          // Destroy the previous cropper instance if any
          if (cropper) {
            cropper.destroy();
          }

          // Initialize the cropper
          cropper = new Cropper(imgElement, {
            aspectRatio: 1,
            viewMode: 1,
            scalable: true,
            zoomable: true,
            cropBoxResizable: true,
            minCropBoxWidth: 80,
            minCropBoxHeight: 80,
          });
        }
        reader.readAsDataURL(file);
      }
    }

    // Function to crop the image and display it in the preview area
    document.getElementById('cropImageBtn').addEventListener('click', function () {
      if (cropper) {
        const canvas = cropper.getCroppedCanvas();
        const croppedImageData = canvas.toDataURL(); // Get the cropped image as base64
        document.getElementById('imgView' + currentInputId).style.display = 'block';
        document.getElementById('imgView' + currentInputId).src = croppedImageData;

        // Close the modal after cropping
        const cropModal = new bootstrap.Modal(document.getElementById('cropModal'));
        cropModal.hide();
      }
    });

    // Function to handle image deletion (called when the delete icon is clicked)
    function deleteSingleImage(imageName, productId) {
      if (confirm('Are you sure you want to delete this image?')) {
        // Send a request to delete the image (you need to implement the server-side deletion logic)
        fetch(`/delete-product-image/${productId}/${imageName}`, {
          method: 'DELETE'
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Image deleted successfully!');
              location.reload();  // Refresh the page to update the images
            } else {
              alert('Error deleting the image.');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error deleting the image.');
          });
      }
    }
  </script>