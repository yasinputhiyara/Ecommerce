<%- include("../partials/header", { user }) %>

    <link rel="stylesheet" href="/user/essence/css/core-style.css">

    <style>
        .coupon-item.copied {
            background-color: #e9ecef;
            transition: background-color 0.3s ease;
        }

        .coupon-input-group {
            display: flex;
        }

        .coupon-input-group input {
            flex-grow: 1;
        }
    </style>

    <!-- Breadcrumb -->
    <div class="breadcumb_area bg-img" style="background-image: url(/user/essence/img/bg-img/breadcumb.jpg);">
        <div class="container h-100">
            <div class="row h-100 align-items-center">
                <div class="col-12">
                    <div class="page-title text-center">
                        <h2>Checkout</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Checkout Section -->
    <div class="checkout_area section-padding-80">
        <div class="container">
            <div class="row">
                <!-- Left Column - Delivery Address -->
                <div class="col-12 col-md-6">
                    <div class="checkout_details_area mt-50 clearfix">
                        <div class="cart-page-heading mb-30">
                            <h5>Select Delivery Address</h5>
                        </div>

                        <div class="saved-addresses mb-4">
                            <div class="card mb-3">
                                <% if (addresses && addresses.length> 0) { %>
                                    <% addresses.forEach((address, index)=> { %>
                                        <div class="card-body">
                                            <div class="custom-control custom-radio">
                                                <input type="radio" class="custom-control-input"
                                                    id="address<%= index %>" name="saved-address"
                                                    value="<%= address._id %>" <%=index===0 ? "checked" : "" %>
                                                >
                                                <label class="custom-control-label" for="address<%= index %>">
                                                    <strong>
                                                        <%= address.name %>
                                                    </strong><br>
                                                    <%= address.addressType %><br>
                                                        <%= address.landMark %>, <%= address.city %>,
                                                                <%= address.state %>, <%= address.pincode %><br>
                                                                        Phone: <%= address.phone %><br>
                                                                            Alternate Phone: <%= address.altPhone %>
                                                </label>
                                            </div>
                                        </div>
                                        <% }); %>
                                            <% } else { %>
                                                <div class="card-body text-center">
                                                    <p>No saved addresses found.</p>
                                                </div>
                                                <% } %>
                            </div>
                        </div>

                        <!-- Add New Address Button -->
                        <button class="btn essence-btn mb-4" onclick="toggleAddressForm()">Add New Address</button>

                        <!-- Add New Address Form -->
                        <div id="newAddressForm" style="display: none;">
                            <div class="cart-page-heading mb-30">
                                <h5>Add New Address</h5>
                            </div>
                            <form id="addressForm" method="POST">
                                <div class="row">
                                    <% const fields=[ { label: 'Address Type' , id: 'addressType' , name: 'addressType'
                                        }, { label: 'Name' , id: 'name' , name: 'name' }, { label: 'Street Address' ,
                                        id: 'landMark' , name: 'landMark' }, { label: 'Town/City' , id: 'city' ,
                                        name: 'city' }, { label: 'Province' , id: 'state' , name: 'state' }, {
                                        label: 'Postcode' , id: 'pincode' , name: 'pincode' }, { label: 'Phone No' ,
                                        id: 'phone' , name: 'phone' }, { label: 'Alternate Phone No' , id: 'altPhone' ,
                                        name: 'altPhone' } ]; %>
                                        <% fields.forEach(field=> { %>
                                            <div class="col-md-6 mb-3">
                                                <label for="<%= field.id %>">
                                                    <%= field.label %> <span>*</span>
                                                </label>
                                                <input type="text" class="form-control" id="<%= field.id %>"
                                                    name="<%= field.name %>" required>
                                            </div>
                                            <% }); %>
                                                <div class="col-12">
                                                    <button type="submit" id="saveButton" class="btn essence-btn">Save
                                                        Address</button>
                                                </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Right Column - Order Details -->
                <div class="col-12 col-md-6 col-lg-5 ml-lg-auto">

                    <!-- New Coupon Section -->
                    <div class="coupon-section mb-4">
                        <div class="cart-page-heading">
                            <h5>Apply Coupon</h5>
                        </div>
                        <div class="coupon-input-group">
                            <input type="text" id="couponCode" class="form-control" placeholder="Enter coupon code">
                            <button class="btn essence-btn ml-2" onclick="applyCoupon()">Apply</button>
                        </div>

                        <div class="available-coupons mt-3">
                            <h6>Available Coupons:</h6>
                            <div class="coupon-list">
                                <% if (availableCoupons && availableCoupons.length> 0) { %>
                                    <% availableCoupons.forEach((coupon, index)=> { %>
                                        <div class="coupon-item d-flex justify-content-between align-items-center mb-2">
                                            <span>

                                                <strong class="coupon-code" id="couponCode<%= index %>">
                                                    <%= coupon.name %>
                                                </strong>
                                                <span class="text-muted">- <%= coupon.offerPrice %>Rs Off (Above Order
                                                        of â‚¹<%= coupon.minPrice %>)</span>
                                            </span>
                                            <button class="btn btn-sm btn-outline-secondary"
                                                onclick="copyCouponCode('couponCode<%= index %>')">
                                                Copy
                                            </button>
                                        </div>
                                        <% }); %>
                                            <% } else { %>
                                                <p class="text-muted">No coupons available</p>
                                                <% } %>
                            </div>
                        </div>
                    </div>



                    <div class="order-details-confirmation">
                        <div class="cart-page-heading">
                            <h5>Your Order</h5>
                            <p>The Details</p>
                        </div>

                        <!-- Order Summary -->
                        <ul class="order-details-form mb-4">
                            <li><span>Product</span> <span>Total</span></li>
                            <% let subtotal=0; %>
                                <% if (cart && cart.items && cart.items.length> 0) { %>
                                    <% cart.items.forEach((item)=> { %>
                                        <% const itemTotal=item.productId.salePrice * item.quantity; %>
                                            <% subtotal +=itemTotal; %>
                                                <li>
                                                    <span>
                                                        <%= item.productId.productName %> x <%= item.quantity %>
                                                    </span>
                                                    <span>&#8377;<%= itemTotal.toFixed(2) %></span>
                                                </li>
                                                <% }); %>
                                                    <% } else { %>
                                                        <li>Your cart is empty.</li>
                                                        <% } %>
                        </ul>

                        <!-- Total Summary -->
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Subtotal
                                <span>&#8377;<%= subtotal.toFixed(2) %></span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Discount
                                <span id="discountAmount">&#8377;0.00</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Total
                                <strong id="finalTotal">&#8377;<%= subtotal.toFixed(2) %></strong>
                            </li>
                        </ul>

                        <!-- Payment Method -->
                        <h5>Select Payment Method</h5>
                        <div class="payment-methods">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" value="razorpay"
                                    id="razorpayRadio">
                                <label class="form-check-label" for="razorpayRadio">Razorpay</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" value="cod"
                                    id="codRadio">
                                <label class="form-check-label" for="codRadio">Cash on Delivery (COD)</label>
                            </div>
                        </div>

                        <!-- Place Order Button -->
                        <form id="orderForm" method="POST">
                            <input type="hidden" name="selectedAddress" id="selectedAddress">
                            <input type="hidden" name="paymentMethod" id="paymentMethod">
                            <!-- <input type="hidden" name="couponCode" id="couponCode" > -->
                            <button type="button" class="btn essence-btn" id="placeOrderButton">Place Order</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script>
        document.getElementById('addressForm').addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent the default form submission

            const form = event.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/add-address', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: result.message || 'Address saved successfully.',
                        icon: 'success',
                        confirmButtonText: 'OK',
                    }).then(() => {
                        location.reload(); // Reload the page to reflect changes
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: result.message || 'Failed to save address. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK',
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong. Please check your connection and try again.',
                    icon: 'error',
                    confirmButtonText: 'OK',
                });
                console.error('Error:', error);
            }
        });

    </script>

    <!-- ADDRESS TOGGLE -->
    <script>
        // Toggle Address Form
        function toggleAddressForm() {
            const form = document.getElementById('newAddressForm');
            form.style.display = form.style.display === 'none' || !form.style.display ? 'block' : 'none';
        }

    </script>
    <!-- ADDRESS SELECTION AND PAYMENT METHOD SELECTION -->
    <script>
        document.querySelectorAll('input[name="saved-address"]').forEach((radio) => {
            radio.addEventListener('change', (e) => {
                document.getElementById('selectedAddress').value = e.target.value;
            });
        });

        // Initialize the selected address value on page load
        document.getElementById('selectedAddress').value =
            document.querySelector('input[name="saved-address"]:checked').value;
    </script>


    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        document.getElementById('placeOrderButton').addEventListener('click', async () => {
            const selectedAddress = document.querySelector('input[name="saved-address"]:checked');
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

            const couponCode = document.getElementById("couponCode").value.trim(); // Get coupon code


            if (!selectedAddress || !paymentMethod) {
                Swal.fire('Error', 'Please select a delivery address and payment method.', 'error');
                return;
            }

            if (paymentMethod.value === 'cod') {
                const response = await fetch('/place-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        selectedAddress: selectedAddress.value,
                        paymentMethod: 'cod',
                        couponCode
                    })
                });

                const result = await response.json();
                if (result.success) {
                    Swal.fire('Success', 'Order placed successfully!', 'success').then(() => {
                        // window.location.href = `/order-success?orderId=${result.orderId}`;
                        window.location.href = `/orders`;
                    });
                } else {
                    Swal.fire('Error', result.message || 'Failed to place order.', 'error');
                }
            }

            if (paymentMethod.value === 'razorpay') {
                try {
                    const response = await fetch('/create-razorpay-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ selectedAddress: selectedAddress.value , couponCode })
                    });

                    if (!response.ok) {
                        throw new Error('Failed to create Razorpay order');
                    }

                    const orderData = await response.json();
                    console.log("orderData ", orderData)

                    const options = {
                        key: orderData.key,
                        amount: orderData.amount,
                        currency: 'INR',
                        name: 'SHOEZO',
                        description: 'Order Payment',
                        order_id: orderData.id,
                        handler: async function (response) {
                            try {
                                const verifyResponse = await fetch('/verify-razorpay-payment', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_signature: response.razorpay_signature,
                                        orderId: orderData.orderId
                                    })
                                });

                                if (!verifyResponse.ok) {
                                    throw new Error('Payment verification failed');
                                }

                                const verifyResult = await verifyResponse.json();

                                if (verifyResult.success) {
                                    Swal.fire('Success', 'Payment successful!', 'success').then(() => {
                                        window.location.href = '/orders';
                                    });
                                } else {
                                    throw new Error(verifyResult.message || 'Payment failed');
                                }
                            } catch (error) {
                                Swal.fire('Error', error.message || 'Payment verification failed', 'error').then(() => {
                                    window.location.href = '/orders';
                                });
                            }
                        },
                        theme: { color: '#3399cc' }
                    };

                    const rzp = new Razorpay(options);

                    rzp.on("payment.failed", async function (response) {
                        try {
                            await fetch("/payment-failed", {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({
                                    orderId: orderData.orderId, // Pass database order ID
                                    ...response,
                                }),
                            });

                            Swal.fire(
                                "Error",
                                "Payment failed. Order status set to pending.",
                                "error"
                            ).then(() => {
                                window.location.href = "/orders";
                            });
                        } catch (error) {
                            console.error("Failed to log payment failure:", error);
                            Swal.fire(
                                "Error",
                                "Payment failed and could not be logged.",
                                "error"
                            );
                        }
                    });


                    rzp.open();
                } catch (error) {
                    console.error('Razorpay order creation failed:', error);
                    Swal.fire('Error', 'Failed to initiate payment. Please try again.', 'error');
                }
            }
        });
    </script>


    <script>
        function applyCoupon() {
            const couponCodeInput = document.getElementById('couponCode');
            const applyButton = document.querySelector('.coupon-input-group button');
            const couponCode = couponCodeInput.value.trim();
            const discountElement = document.getElementById('discountAmount');
            const finalTotalElement = document.getElementById('finalTotal');

            fetch('/apply-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode })
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        discountElement.textContent = `â‚¹${result.discount.toFixed(2)}`;
                        finalTotalElement.textContent = `â‚¹${result.finalTotal.toFixed(2)}`;

                        Swal.fire({
                            title: 'Success!',
                            text: `Coupon "${result.couponName}" applied successfully!`,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });

                        couponCodeInput.disabled = true;
                        applyButton.disabled = true;
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: result.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                })
                .catch(error => {
                    console.error('Coupon application error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred while applying the coupon',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        }

        function copyCouponCode(elementId) {
            const couponCodeElement = document.getElementById(elementId);
            const couponCode = couponCodeElement.textContent.trim();

            navigator.clipboard.writeText(couponCode).then(() => {
                couponCodeElement.closest('.coupon-item').classList.add('copied');
                setTimeout(() => {
                    couponCodeElement.closest('.coupon-item').classList.remove('copied');
                }, 2000);
            });
        }
    </script>


    <!-- Include your existing scripts -->
    <script src="/user/essence/js/jquery/jquery-2.2.4.min.js"></script>
    <script src="/user/essence/js/popper.min.js"></script>
    <script src="/user/essence/js/bootstrap.min.js"></script>
    <script src="/user/essence/js/plugins.js"></script>
    <script src="/user/essence/js/classy-nav.min.js"></script>
    <script src="/user/essence/js/active.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <%- include("../partials/footer") %>