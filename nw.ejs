<%- include("../partials/adminheader") %>

  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">


  <style>
    #imageToCrop {
      max-width: 100%;
      height: auto;
    }

    .img-thumbnail {
      max-width: 100%;
      max-height: 150px;
      object-fit: cover;
    }

    .error-message {
      color: red;
    }


    .thumbnails-container {
      display: flex;
      overflow-x: auto;
    }


    .thumbnail {
      margin-right: 10px;


    }

    img {
      max-width: 100%;
      /* Ensures it fits within its container */
      height: auto;
    }

    #imgView1,
    #imgView2,
    #imgView3,
    #imgView4 {
      max-width: 300px;
      /* Adjust this to control preview size */
      height: auto;
      border: 1px solid #ddd;
      padding: 5px;
    }

    .image-cropper img {
      max-width: 100%;
      height: auto;
    }
  </style>


  <div class="container-scroller">
    <%- include("../partials/adminSidebar") %>

      <div class="container-fluid page-body-wrapper">
        <%- include("../partials/adminNav") %>

          <div class="main-panel">
            <div class="content-wrapper">

              <section class="content-main">
                <div class="row">
                  <div class="col-9">
                    <div class="content-header">
                      <h2 class="content-title" style="color: whitesmoke;">Add New Product</h2>
                    </div>
                  </div>
                  <div class="col-lg-12">
                    <div class="card mb-4">
                      <div class="card-body"  style="background-color: rgb(6, 12, 40); color: antiquewhite;">
                        <form method="post" action="/admin/add-product" enctype="multipart/form-data"
                          onsubmit="return validateForm()">
                          <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border"
                              id="product_name">
                            <div id="productName-error" class="error-message"></div>
                          </div>
                          <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">

                              <% for(let i=0 ; i<brand.length ;i++ ) {%>

                                <option value="<%= brand[i].brandName  %>">

                                  <%= brand[i].brandName %>

                                </option>
                                <% } %>


                            </select>
                            <div id="brand-error" class="error-message"></div>
                          </div>
                          <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <input type="text" id="descriptionid" name="description" class="form-control border">
                            <!-- <textarea placeholder="Type here" id="descriptionid" name="description"
                              class="form-control border" rows="4"></textarea> -->
                            <div id="description-error" class="error-message"></div>
                          </div>
                          <div class="row">
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Regular price</label>
                                <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                <div id="regularPrice-error" class="error-message"></div>
                              </div>
                            </div>
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Sale price</label>
                                <input placeholder="$" name="salePrice" type="text" class="form-control border">

                              </div>
                              <div id="salePrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Quantity</label>
                                <input placeholder="" name="quantity" type="text" class="form-control border">
                                <div id="quantity-error" class="error-message"></div>
                              </div>
                            </div>
                          </div>
                          <div class="row">

                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Color</label>
                                <input name="color" type="text" class="form-control border">
                              </div>
                              <div id="color-error" class="error-message"></div>
                            </div>

                          </div>
                          <div class="card mb-4">
                            <div class="card-body">
                              <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                  <label class="form-label">Category</label>
                                  <select class="form-select border" style="width: 150px;" name="category">



                                    <% for(let i=0 ; i<cat.length ;i++ ) {%>
                                      <option value="<%= cat[i].name %>">

                                        <%= cat[i].name %>

                                      </option>

                                      <% } %>


                                  </select>
                                  <div id="category-error" class="error-message"></div>
                                </div>
                              </div>
                            </div>
                          </div>

                          <div class="card mb-4">
                            <div class="card-body">
                              <div class="row gx-2">
                                <div class="col-sm-6 mb-3">
                                  <label class="form-label">Sub Category</label>
                                  <select class="form-select border" style="width: 150px;" name="subCategory">

                                    <option value="formal"> Formal Shoes</option>
                                    <option value="sports"> Sports Shoes</option>
                                    <option value="casual"> Casual Shoes</option>
                                    <option value="casual"> Sneakers Shoes </option>
                                  </select>
                                  <!-- <div id="category-error" class="error-message"></div> -->
                                </div>
                              </div>
                            </div>
                          </div>

                          <div class="container mt-4">
                            <div class="card shadow-sm">
                              <div class="card-header bg-primary text-white">
                                <h4 class="mb-0">Upload Images</h4>
                              </div>
                              <div class="card-body">
                                <div class="row g-3">
                                  <!-- Image Upload 1 -->
                                  <div class="col-md-6 col-lg-3">
                                    <div class="card h-100 border-light text-center">
                                      <div class="card-body">
                                        <label for="input1" class="form-label text-primary">Image 1</label>
                                        <input type="file" class="form-control mb-3" id="input1" name="images"
                                          accept="image/png, image/jpeg, image/jpg"
                                          onchange="handleImagePreview(event, 1)">
                                        <img src="" alt="Preview 1" id="imgPreview1" class="img-thumbnail"
                                          style="display:none; max-height: 150px;">
                                      </div>
                                      <div class="card-footer bg-light text-center">
                                        <button class="btn btn-sm btn-outline-primary" type="button"
                                          data-bs-toggle="modal" data-bs-target="#cropModal"
                                          onclick="prepareCrop(1)">Crop</button>
                                      </div>
                                    </div>
                                  </div>
                                  <!-- Image Upload 2 -->
                                  <div class="col-md-6 col-lg-3">
                                    <div class="card h-100 border-light text-center">
                                      <div class="card-body">
                                        <label for="input2" class="form-label text-primary">Image 2</label>
                                        <input type="file" class="form-control mb-3" id="input2" name="images"
                                          accept="image/png, image/jpeg, image/jpg"
                                          onchange="handleImagePreview(event, 2)">
                                        <img src="" alt="Preview 2" id="imgPreview2" class="img-thumbnail"
                                          style="display:none; max-height: 150px;">
                                      </div>
                                      <div class="card-footer bg-light text-center">
                                        <button class="btn btn-sm btn-outline-primary" type="button"
                                          data-bs-toggle="modal" data-bs-target="#cropModal"
                                          onclick="prepareCrop(2)">Crop</button>
                                      </div>
                                    </div>
                                  </div>
                                  <!-- Image Upload 3 -->
                                  <div class="col-md-6 col-lg-3">
                                    <div class="card h-100 border-light text-center">
                                      <div class="card-body">
                                        <label for="input3" class="form-label text-primary">Image 3</label>
                                        <input type="file" class="form-control mb-3" id="input3" name="images"
                                          accept="image/png, image/jpeg, image/jpg"
                                          onchange="handleImagePreview(event, 3)">
                                        <img src="" alt="Preview 3" id="imgPreview3" class="img-thumbnail"
                                          style="display:none; max-height: 150px;">
                                      </div>
                                      <div class="card-footer bg-light text-center">
                                        <button class="btn btn-sm btn-outline-primary" type="button"
                                          data-bs-toggle="modal" data-bs-target="#cropModal"
                                          onclick="prepareCrop(3)">Crop</button>
                                      </div>
                                    </div>
                                  </div>
                                  <!-- Image Upload 4 -->
                                  <div class="col-md-6 col-lg-3">
                                    <div class="card h-100 border-light text-center">
                                      <div class="card-body">
                                        <label for="input4" class="form-label text-primary">Image 4</label>
                                        <input type="file" class="form-control mb-3" id="input4" name="images"
                                          accept="image/png, image/jpeg, image/jpg"
                                          onchange="handleImagePreview(event, 4)">
                                        <img src="" alt="Preview 4" id="imgPreview4" class="img-thumbnail"
                                          style="display:none; max-height: 150px;">
                                      </div>
                                      <div class="card-footer bg-light text-center">
                                        <button class="btn btn-sm btn-outline-primary" type="button"
                                          data-bs-toggle="modal" data-bs-target="#cropModal"
                                          onclick="prepareCrop(4)">Crop</button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>

                          <!-- Crop Modal -->
                          <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                              <div class="modal-content">
                                <div class="modal-header">
                                  <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
                                  <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                  <img id="imageToCrop" src="" alt="Image to Crop" class="img-fluid">
                                </div>
                                <div class="modal-footer">
                                  <button type="button" class="btn btn-secondary"
                                    data-bs-dismiss="modal">Cancel</button>
                                  <button type="button" class="btn btn-primary"
                                    onclick="saveCroppedImage()">Save</button>
                                </div>
                              </div>
                            </div>
                          </div>

                      </div>
                      <div>
                        <button class="btn btn-primary rounded font-sm hover-up" style="width: 100%;" type="submit"
                          onclick="validateAndSubmit()">Publish</button>
                      </div>
                      </form>
                    </div>
                  </div>
                </div>
            </div>
            </section>






          </div>
      </div>


  </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>


  <script>
    let currentCropper = null;
    let currentImageInput = null;
    let currentImagePreviewId = null;

    function handleImagePreview(event, index) {
      const inputFile = event.target;
      const previewImg = document.getElementById(`imgPreview${index}`);

      if (inputFile.files && inputFile.files[0]) {
        const reader = new FileReader();
        reader.onload = (e) => {
          previewImg.src = e.target.result;
          previewImg.style.display = 'block';
        };
        reader.readAsDataURL(inputFile.files[0]);
      }
    }

    function prepareCrop(index) {
      const inputFile = document.getElementById(`input${index}`);
      const modalImage = document.getElementById('imageToCrop');

      if (inputFile.files && inputFile.files[0]) {
        const reader = new FileReader();
        reader.onload = (e) => {
          modalImage.src = e.target.result;

          // Destroy any existing cropper instance
          if (currentCropper) {
            currentCropper.destroy();
          }

          // Initialize CropperJS
          currentCropper = new Cropper(modalImage, {
            aspectRatio: 1,
            viewMode: 1,
            autoCropArea: 1,
            movable: true,
            zoomable: true,
            scalable: true,
            cropBoxResizable: true,
          });

          currentImageInput = inputFile;
          currentImagePreviewId = `imgPreview${index}`;
        };
        reader.readAsDataURL(inputFile.files[0]);
      } else {
        alert("Please select an image before cropping.");
      }
    }


    function saveCroppedImage() {
      if (!currentCropper) return;

      const croppedCanvas = currentCropper.getCroppedCanvas();
      const previewImg = document.getElementById(currentImagePreviewId);

      // Update the preview image
      previewImg.src = croppedCanvas.toDataURL('image/jpeg');

      // Convert canvas to Blob and update the file input
      croppedCanvas.toBlob((blob) => {
        const file = new File([blob], `cropped-image-${Date.now()}.jpg`, { type: 'image/jpeg' });

        // Create a new DataTransfer object and set the file input value
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(file);
        currentImageInput.files = dataTransfer.files;
      });

      // Close the modal
      const cropModal = document.getElementById('cropModal');
      const modalInstance = bootstrap.Modal.getInstance(cropModal);
      modalInstance.hide();

      // Destroy the Cropper instance
      currentCropper.destroy();
      currentCropper = null;
    }


    function validateForm() {
      clearErrorMessages();
      const name = document.getElementsByName("productName")[0].value.trim();
      const description = document.getElementById("descriptionid").value.trim();
      const price = document.getElementsByName("regularPrice")[0].value.trim();
      const salePrice = document.getElementsByName("salePrice")[0].value.trim();
      const quantity = document.getElementsByName("quantity")[0].value.trim();
      const color = document.getElementsByName("color")[0].value.trim();
      const images = document.getElementById("input1");
      let isValid = true;

      if (!name || !/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("productName-error", "Please enter a valid product name (alphabetic characters only).");
        isValid = false;
      }

      if (!description || !/^[a-zA-Z\s]+$/.test(description)) {
        displayErrorMessage("description-error", "Please enter a valid description (alphabetic characters only).");
        isValid = false;
      }

      if (!quantity || parseInt(quantity) < 0) {
        displayErrorMessage("quantity-error", "Please enter a valid non-negative quantity.");
        isValid = false;
      }

      if (!price || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage("regularPrice-error", "Please enter a valid non-negative price.");
        isValid = false;
      }

      if (!salePrice || !/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
        displayErrorMessage("salePrice-error", "Please enter a valid non-negative sale price.");
        isValid = false;
      }

      if (parseFloat(price) <= parseFloat(salePrice)) {
        displayErrorMessage("regularPrice-error", "Regular price must be greater than sale price.");
        isValid = false;
      }

      if (!color) {
        displayErrorMessage("color-error", "Please enter a color.");
        isValid = false;
      }

      if (images.files.length === 0) {
        displayErrorMessage("images-error", "Please select at least one image.");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
      });
    }
  </script>



  <%- include("../partials/adminfooter") %>